HW_2

'number' + 3 + 3  	Ответ: 'number33' конкатенация идет в приоритете значит все добавится в string

null + 3 		  Ответ: 3 так как null по умолчанию 0 

5 && "qwerty"     Ответ: qwerty так как оператор &&  идет слева на право и возвращает либо первый false, а если все true то последнее значение операнда 

+'40' + +'2' + "hillel"; 	Ответ: 42hillel так как унарный плюс даже стринг может превратить в класс number и js динамично типизованный язык он видит что в строке цыфри и плюсует их между собой ввиду того что операция между операндами идет слева на право, а вторая операция уже конкатенация в приоритете.

'10' - 5 === 6; 	Ответ: false так как сразу происходит операция отнимания и получается 5, ну а дальше 5 !== 6 

true + false 	Ответ: 1 так как по умолчанию js true == 1; false == 0 

'4px' - 3     Ответ: NaN так как тип первого операнда string из-за букв в нем. следовательно нельзя отнять от string number, поэтому и ответ не число

'4' - 3 	Ответ: 1  js динамично типизованный язык он видит что в строке цыфри и проводит операцию отнимания 

'6' + 3 ** 0;	Ответ: 61 так как идет правоасоциативная операция и сразу приводится 3 в степени 0, а любое число в степени 0 == 1, а дальше приоритет конкатенации так как первый операнд стринг 

12 / '6' 	Ответ: 2 js динамично типизованный язык он видит что в строке цыфри и проводит операцию деления

'10' + (5 === 6);  Ответ 10false так как все как в математике, операция окруженная скобками выполняется первой и первая операциия соответсвенно false, а дальше вступает конкатенация 

null == ''     Ответ: False так как по правилу Null может равнятся только себе и undefined все остальное false

3 ** (9 / 3); Ответ: 27 так как се как в математике, операция окруженная скобками выполняется первой и первая операциия деления а затеч возведения в степень.

!!'false' == !!'true'  Ответ: True так как оператор !! значение инвертирует операнд в булеан и так как не пустой стринг является true затем первая операция интвертации на false и снова на true. ну а дальше простотак как true == true  

0 || '0' && 1 	Ответ: 1 так как оператор && имеет приоритет и возвращает True и дальше уже код не идет. есть шесть ложных значений: false, null, undefined, NaN, пустая строка и 0. Все остальное приводится к true.

(+null == false) < 1; 	Ответ: False первое действине это сравнение, так как + переводит null в number 0 и false по умолчанию 0 значит действие true, дальше идет операция сравнивания true == 1 тоесть 1 не больше 1 

false && true || true 	Ответ: True так как оператор && имеет приоритете он проверяется первый, и так как оба варинта не true дальше вступает оператор 	|| он выводит первое true (не знаю как обьяснить, но суть уловил))))

false && (false || true); 	Ответ: False так как первая операция в скобках || когда один вариант false а другой true, возвращают True, а дальше операция && когда один вариант false возвращается первый false

(+null == false) < 1 ** 5;  Ответ: False первое действине это сравнение, так как + переводит null в number 0 и false по умолчанию 0 значит действие true. Затем 1 в степени 5 это 1 дальше идет операция сравнивания true == 1 тоесть 1 не больше 1 